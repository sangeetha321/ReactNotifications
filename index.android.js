/**
 * Sample React Native App
 * https://github.com/facebook/react-native
 * @flow
 */

import React, {
    Component
}
from 'react';
import {
    AppRegistry,
    StyleSheet,
    Text,
    View,
    TouchableOpacity
}
from 'react-native';

var PushNotification = require('react-native-push-notification');
PushNotification.configure({
    // (optional) Called when Token is generated (iOS and Android)
    onRegister: function(token) {
        console.log(token);
        console.log('TOKEN:', token);
        fetch('https://iid.googleapis.com/iid/v1/' + token.token + '/rel/topics/notification', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'key=AAAAXbZQeck:APA91bF4Jo1LYJXa-sDjgff16LgKTkFaZoOL-17iyMG0fDSyBWD8WlVOF5GDB3OPKJljNHgCJDWwMQEWn-RlgHRZckM4VSg4QQNI6x1V_W6YCtQP5LwDArl_NTFSkCneobvsMSLefBgH'
                }
            })
            .then(function(result) {
                console.log(result);
            })

    },

    // (required) Called when a remote or local notification is opened or received
    onNotification: function(notification) {
        console.log("entered");
        console.log('NOTIFICATION:', notification);
        PushNotification.localNotification({
            /* Android Only Properties */
            id: '0', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
            ticker: "My Notification Ticker", // (optional)
            autoCancel: true, // (optional) default: true
            largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
            smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
            bigText: "This is a test message for Notifications", // (optional) default: "message" prop
            subText: "This is a Message", // (optional) default: none
            color: "red", // (optional) default: system default
            vibrate: true, // (optional) default: true
            vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
            tag: 'some_tag', // (optional) add tag to message
            group: "group", // (optional) add group to message
            ongoing: false, // (optional) set whether this is an "ongoing" notification

            /* iOS and Android properties */
            title: "New Notification", // (optional, for iOS this is only used in apple watch, the title will be the app name on other iOS devices)
            message: notification.message, // (required)
            playSound: true, // (optional) default: true
            soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
            number: '10', // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
            actions: '["View", "Cancel"]', // (Android only) See the doc for notification actions to know more
        });
    },

    // ANDROID ONLY: GCM Sender ID (optional - not required for local notifications, but is need to receive remote push notifications)
    senderID: "402490685897",

    // IOS ONLY (optional): default: all - Permissions to register.
    permissions: {
        alert: true,
        badge: true,
        sound: true
    },

    // Should the initial notification be popped automatically
    // default: true
    popInitialNotification: true,

    /**
     * (optional) default: true
     * - Specified if permissions (ios) and token (android and ios) will requested or not,
     * - if not, you must call PushNotificationsHandler.requestPermissions() later
     */
    requestPermissions: true,
});

export default class ReactNotifications extends Component {
    constructor(props) {
        super(props);
        // this.PushNotification = require('react-native-push-notification');


    }

    componentDidMount() {

    }
    notify = () => {}
    render() {
        return ( <View style = {
                styles.container
            }>
            <Text style={
                styles.welcome
            }>
            Welcomes to React Native!{
                this.props.name
            } </Text><TouchableOpacity onPress = {
                this.notify
            }>
            <Text>Click</Text></TouchableOpacity></View>
        );
    }
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: '#F5FCFF',
    },
    welcome: {
        fontSize: 20,
        textAlign: 'center',
        margin: 10,
    },
    instructions: {
        textAlign: 'center',
        color: '#333333',
        marginBottom: 5,
    },
});

AppRegistry.registerComponent('ReactNotifications', () => ReactNotifications);
